@using SequelyMAUI.Entities
@using SequelyMAUI.Models
@using System.Data
@using System.Dynamic
@inject IDbService _DbService
@inject ITabService _TabService
@inject IDialogService _DialogService

@if (Data?.Columns.Count > 0)
{
    <MudSimpleTable Hover="@true" Bordered="@true" Dense="@true">

        <thead>
            <tr>
                @foreach (DataColumn c in Data.Columns)
                {
                    <th>@c</th>
                }
            </tr>
        </thead>

        <tbody>
            @foreach (DataRow row in Data.Rows)
            {
                <tr>
                    @foreach (DataColumn c in Data.Columns)
                    {
                        <td>@row[c]</td>
                    }
                </tr>
            }
        </tbody>

    </MudSimpleTable>
}

@code 
{
    [Parameter]
    public TabEntity TabEntity { get; set; } = new TabEntity();

    [Parameter]
    public EventCallback UpdateParentState { get; set; }


    public DataTable? Data { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Debug.WriteLine($"Tab Id:{TabEntity.Id}");

        if (TabEntity.Query == null)
            return;

        try
        {
            Data = _TabService.RetrieveCachedData(TabEntity);

            if (Data == null)
            {
                Data = await _DbService.RunQuery(TabEntity.Query);
                _TabService.CacheData(TabEntity, Data);
            }

            await _TabService.StoreTabPanelIndex();
        }
        catch (Exception ex)
        {
            await _DialogService.ShowMessageBox("Error", ex.Message);

            await _TabService.DeleteTab(TabEntity);
            await UpdateParentState.InvokeAsync();
        }
    }
}


