@using Models
@using System.Text.Json
@using SequelyMAUI.Components.Utils
@using SequelyMAUI.Entities
@using Microsoft.EntityFrameworkCore


@inject IConnectionService _ConnectionService
@inject IDbService _DbService
@inject NavigationManager _NavigationManager
@inject ITabService _TabService

@page "/mysql-dashboard"

@* <ConnectionDrawer OnDoubleClick="AddTab" Databases="Databases"/>

<MudContainer Class="mt-6">
    <MudAlert Severity="Severity.Success" Class="mt-16">Text inside MudContainer</MudAlert>
</MudContainer> *@


<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(() => _open = !_open)" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/MudBlazor/MudBlazor" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_open" Elevation="1" Width="300px">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">@(_ConnectionService.CurrentConnection!.Name)</MudText>
        </MudDrawerHeader>
       
        <DatabaseTreeView Databases="Databases" UpdateParentState="StateHasChanged"></DatabaseTreeView>

    </MudDrawer>
    <MudMainContent Class="pt-16">
        <MudContainer Class="mt-6">

             @if (_TabService.Tabs.Count() > 0)
            {
                 <MudDynamicTabs ref="@tabs" AddIconToolTip="Click to add a new tab" CloseIconToolTip="Close tab" CloseTab="@((MudTabPanel panel) => _TabService.DeleteTab((panel.ID as TabEntity)!))"
                                PanelClass="px-4 py-6" Elevation="4" Rounded ApplyEffectsToContainer AddIconStyle="display: none;" @bind-ActivePanelIndex="@(_TabService.SelectedTabPanelIndex)">
                @foreach (var tab in _TabService.Tabs.ToList())
                {
                    <MudTabPanel ID="@(tab)" Label="@tab.Name" Text="@tab.Name" Style="text-transform:inherit">
                         <ChildContent>
                            <TabContent TabEntity="@tab" UpdateParentState="StateHasChanged"></TabContent>
                        </ChildContent>
                    </MudTabPanel>
                } 
                </MudDynamicTabs>
            } 

        </MudContainer>
    </MudMainContent>
</MudLayout>



@code
{
    MudDynamicTabs tabs = new MudDynamicTabs();

    List<DatabaseEntity> Databases = new List<DatabaseEntity>();

    TabContent tabContent = new TabContent();


    int activeTabIndex = 0;
    bool _open = true;

    protected async override Task OnInitializedAsync()
    {
        _DbService.CurrentMySqlConnection = _ConnectionService.CurrentConnection!.ActualConnection;
        Databases = await _DbService.GetDatabases();
        
        await _TabService.Init();
    }
}